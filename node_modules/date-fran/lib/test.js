"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var _1 = require(".");
var builders_1 = require("./builders");
// import dateFranModules from "./index";
// const { 
//     tomorrowsDate, 
//     differenceInDays, 
//     todaysDate, 
//     givenDateAndCurrentTime, 
//     yesterdaysDate,
//     dateForwardBuild,
// } = dateFranModules;
console.log("\n\t Tomorows date is: ", (0, builders_1.tomorrowsDate)());
console.log("\n\t Todays date is: ", (0, builders_1.todaysDate)());
console.log("\n\t Todays date and current time is: ", (0, builders_1.givenDateAndCurrentTime)());
var dd = (0, builders_1.givenDateAndCurrentTime)("2022-09-12");
console.log("\n\t Todays date and current time is-dd: ", (0, builders_1.givenDateAndCurrentTime)(dd).toDateString());
console.log("\n\t yesterdaysDateByGivenDate: ", (0, _1.yesterdaysDateByGivenDate)("2023-02-27").toDateString());
console.log("\n\t tomorrowsDateByGivenDate: ", (0, _1.tomorrowsDateByGivenDate)("2023-02-27").toDateString());
// console.log("\n\t Given stringed date: ", givenDateAndCurrentTime("2022/09/04"))
// console.log("\n\t differenceInDays: ", differenceInDays(new Date(), "2022-10-15"))
// console.log("\n\t dateForwardBuild: ", dateForwardBuild(2022, 8, 10))
// console.log("\n\t Future date is greater than previous date:: ", varyingDatesComparator("2023/01/04", "2022/03/05"));
// console.log("\n\t both dates are equal:: ", sameDateComparator("2022/09/04", "2022-09-05"));
// console.log("\n\t dateAcronym: ", dateAcronym(20));
// console.log("\n\t dateConstrainer: ", dateConstrainer(`2022-10-23`));
// const jsDate = new Date()
// const preferredFormat = `${givenDateAndCurrentTime().getDate()}`.concat(dateAcronym(todaysDate().getDate())," ", monthAndIndex[jsDate.getMonth()], " ", `${jsDate.getFullYear()}`) 
// console.log(preferredFormat)
// // Allow date to return choiced format; e.g: Wed, 31st Aug 2022
// // or; e.g: 31/08/2
